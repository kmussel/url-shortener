# PostgreSQL. Versions 9.3 and up are supported.
#
# Install the pg driver:
#   gem install pg
# On macOS with Homebrew:
#   gem install pg -- --with-pg-config=/usr/local/bin/pg_config
# On macOS with MacPorts:
#   gem install pg -- --with-pg-config=/opt/local/lib/postgresql84/bin/pg_config
# On Windows:
#   gem install pg
#       Choose the win32 build.
#       Install PostgreSQL and put its /bin directory on your path.
#
# Configure Using Gemfile
# gem 'pg'
#
default: &default
  adapter:  postgresql
  encoding: unicode
  database: <%= ENV['PG_DATABASE'] %>
  username: <%= ENV['PG_USERNAME'] %>
  password: <%= ENV['PG_PASSWORD'] %>
  host:     <%= ENV.fetch('PG_HOST') { 'host.docker.internal' } %>
  port:     <%= ENV.fetch('PG_PORT') { 5432 } %>

  # database: <%= ENV.fetch('PG_DATABASE') { 'urlshortener' } %>
  # username: <%= ENV.fetch('PG_USERNAME') { 'postgres' } %>
  # password: <%= ENV.fetch('PG_PASSWORD') { '' } %>
  # host:     <%= ENV.fetch('PG_HOST') { 'db' } %>
  # pool:     <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  # port:     <%= ENV.fetch('PG_PORT') { 5432 } %>

development:
  <<: *default
  database: <%= ENV.fetch('PG_DATABASE') { 'urlshortener' } %>
  username: <%= ENV.fetch('PG_USERNAME') { 'postgres' } %>
  password: <%= ENV.fetch('PG_PASSWORD') { 'postgres' } %>
  pool:     <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  port:     <%= ENV.fetch('PG_PORT') { 5432 } %>
  # database: db/development.sqlite3

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  adapter: sqlite3
  database: test/db/test.sqlite3

production:
  <<: *default